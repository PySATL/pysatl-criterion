name: PySATL CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-linux:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run tests
        run: pytest --random-order

      - name: Tests with Coveralls
        if: (runner.os == 'Linux' && matrix.python-version == '3.12')
        run: |
          pytest --random-order --cov=criterion --cov-config=.coveragerc

      - name: Coveralls
        if: (runner.os == 'Linux' && matrix.python-version == '3.12')
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.coverallsToken }}
        run: |
            # Allow failure for coveralls
            coveralls || true

      - name: Check for repository changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "Repository is dirty, changes detected:"
            git status
            git diff
            exit 1
          else
            echo "Repository is clean, no changes detected."
          fi

      - name: Sort imports (isort)
        run: |
          isort --check .

      - name: Run Ruff
        run: |
          ruff check --output-format=github

      - name: Run Ruff format check
        run: |
          ruff format --check

      - name: Mypy
        run: |
          mypy pysatl tests

  pre-commit:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - uses: pre-commit/action@v3.0.1

  build:
    name: "Build"
    needs: [ build-linux, pre-commit ]
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Build distribution
      run: |
        pip install -U build
        python -m build --sdist --wheel

    - name: Upload artifacts ðŸ“¦
      uses: actions/upload-artifact@v4
      with:
        name: pysatl-criterion-build
        path: |
          dist
        retention-days: 10
